{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/Connection/Connection.ts","../../src/services/register.services.ts","../../src/services/authenfication.services.ts","../../src/services/password.services.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;;;ACV0C;AACwB;AACY;AACZ;AACpB;AAO9C;IAII,wBAAoB,aAAqC,EACrC,eAAiC,EAAU,eAAiC,EAC5E,QAAyB;QAFzB,kBAAa,GAAb,aAAa,CAAwB;QACrC,oBAAe,GAAf,eAAe,CAAkB;QAAU,oBAAe,GAAf,eAAe,CAAkB;QAC5E,aAAQ,GAAR,QAAQ,CAAiB;IAC7C,CAAC;IAED,8BAAK,GAAL,UAAM,IAAY;QACd,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACxE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,qCAAY,GAAZ;QAAA,iBAiCC;QAhCG,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC/B,KAAK,EAAE,UAAU;YACjB,OAAO,EAAE,0BAA0B;YACnC,MAAM,EAAE;gBACJ;oBACI,IAAI,EAAE,OAAO;oBACb,WAAW,EAAE,aAAa;oBAC1B,IAAI,EAAE,MAAM;iBACf;gBACD;oBACI,IAAI,EAAE,UAAU;oBAChB,WAAW,EAAE,gBAAgB;oBAC7B,IAAI,EAAE,UAAU;iBACnB;aACJ;YACD,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,UAAC,IAAI;wBACV,EAAE,EAAC,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;4BAC7C,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;wBAC7D,CAAC;oBACL,CAAC;iBACJ;gBACD;oBACI,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;iBACjB;aACJ;SACJ,CAAC,CAAC;QAEH,KAAK,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAED,uCAAc,GAAd;QAAA,iBA4BC;QA3BG,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC/B,KAAK,EAAE,iBAAiB;YACxB,OAAO,EAAE,sCAAsC;YAC/C,MAAM,EAAE;gBACJ;oBACI,IAAI,EAAE,OAAO;oBACb,WAAW,EAAE,cAAc;oBAC3B,IAAI,EAAE,MAAM;oBACZ,KAAK,EAAE,OAAO;iBACjB;aACJ;YACD,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE,UAAC,IAAI;wBACV,EAAE,EAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;4BACpB,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACpD,CAAC;oBACL,CAAC;iBACJ;gBACD;oBACI,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;iBACjB;aACJ;SACJ,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IA/EQ,cAAc;QAJ1B,wEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;WACG;SAC/B,CAAC;wLAKqC,CAAsB;YACpB,uEAAgB,CAA2C;YAClE,WAAe;OANpC,cAAc,CAgF1B;IAAD,CAAC;AAAA;SAhFY,cAAc,e;;;;;;;;;;;;;;;;;;;;ACXqB;AACP;AAGzC;IACI,0BAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAEnC,CAAC;IAED,mCAAQ,GAAR,UAAS,KAAa,EAAE,QAAgB;QACpC,IAAM,IAAI,GAAG,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,GAAG,gBAAgB,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IARQ,gBAAgB;QAD5B,yEAAU,EAAE;6DAEgB,wEAAU,oBAAV,wEAAU;OAD1B,gBAAgB,CAS5B;IAAD,uBAAC;;CAAA;AAT4B;;;;;;;;;;;;;;;;;;;;;ACJmB;AACP;AAGzC;IACI,gCAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IACD;;OAEG;IACH,sCAAK,GAAL,UAAM,KAAa,EAAE,QAAe;QAChC,IAAM,IAAI,GAAG,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,GAAG,OAAO,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAVQ,sBAAsB;QADlC,yEAAU,EAAE;6DAEiB,wEAAU,oBAAV,wEAAU;OAD3B,sBAAsB,CAWlC;IAAD,6BAAC;;CAAA;AAXkC;;;;;;;;;;;;;;;;;;;;;ACJa;AACP;AAGzC;IACI,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAE,CAAC;IAEvC;;OAEG;IACH,yCAAc,GAAd,UAAe,KAAY;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,GAAG,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACjF,CAAC;IAED;;OAEG;IACH,yCAAc,GAAd,UAAe,WAAmB;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,GAAE,qBAAqB,EAAE,WAAW,CAAC,CAAC;IAEvF,CAAC;IAhBQ,gBAAgB;QAD5B,yEAAU,EAAE;6DAEiB,wEAAU,oBAAV,wEAAU;OAD3B,gBAAgB,CAiB5B;IAAD,uBAAC;;CAAA;AAjB4B;;;;;;;;;ACJ7B;AAAA;AAAA;AAA2E;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AAEb;AACsB;AACR;AACqB;AACZ;AACA;AA+B/D;IAAA;IAAwB,CAAC;IAAZ,SAAS;QA7BrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAK;gBACH,oFAAc;aACjB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;oBACE,KAAK,EAAE,EAEN;iBACF,CAAC;gBACE,8EAAgB;aACjB;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE;gBACf,6DAAK;gBACL,oFAAc;aACf;YACD,SAAS,EAAE;gBACT,2EAAS;gBACT,iFAAY;gBACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;gBAClD,iGAAsB;gBACtB,qFAAgB;gBAChB,sFAAgB;aACnB;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AC1CoB;AACD;AACY;AACM;AAEK;AAIhE;IAGE,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,oFAAc,CAAC;QAG5B,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,KAAK;QAHjB,wEAAS,CAAC;WACc;SACxB,CAAC;cAIgF;OAHrE,KAAK,CAWjB;IAAD,CAAC;AAAA;SAXY,KAAK,2B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 110\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 152;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 152\n// module chunks = 0","import { Component } from '@angular/core';\nimport {RegisterServices} from \"../../services/register.services\";\nimport {AuthenficationServices} from \"../../services/authenfication.services\";\nimport {PasswordServices} from \"../../services/password.services\";\nimport {AlertController} from \"ionic-angular\";\nimport {NgForm} from \"@angular/forms\";\n\n@Component({\n  selector: 'page-connection',\n  templateUrl: 'Connection.html'\n})\nexport class ConnectionPage {\n    email: string;\n    password: string;\n\n    constructor(private authenService: AuthenficationServices,\n                private registerService: RegisterServices, private passwordService: PasswordServices,\n                private alertCtl: AlertController) {\n    }\n\n    login(form: NgForm) {\n        this.authenService.login(form.value.userEmail, form.value.userPassword);\n        console.log(form.value);\n        this.email = \"\";\n        this.password = \"\";\n    }\n\n    registerUser() {\n        const alert = this.alertCtl.create({\n            title: 'Register',\n            message: 'Enter email and password',\n            inputs: [\n                {\n                    name: 'Email',\n                    placeholder: 'Enter email',\n                    type: 'text'\n                },\n                {\n                    name: 'Password',\n                    placeholder: 'Enter Password',\n                    type: 'password'\n                }\n            ],\n            buttons: [\n                {\n                    text: 'Register',\n                    handler: (data) =>{\n                        if(data.Email != null && data.Password != null) {\n                            this.registerService.register(data.Email, data.Password);\n                        }\n                    }\n                },\n                {\n                    text: 'Cancel',\n                    role: 'cancel'\n                }\n            ]\n        });\n\n        alert.present();\n    }\n\n    motPasseOublie() {\n        const alert = this.alertCtl.create({\n            title: 'Forget password',\n            message: 'Enter email to recover your password',\n            inputs: [\n                {\n                    name: 'email',\n                    placeholder: 'abc@yahoo.fr',\n                    type: 'text',\n                    label: 'Email'\n                }\n            ],\n            buttons: [\n                {\n                    text: 'Reset',\n                    handler: (data) =>{\n                        if(data.email != null) {\n                            this.passwordService.forgotPassword(data.email);\n                        }\n                    }\n                },\n                {\n                    text: 'Cancel',\n                    role: 'cancel'\n                }\n            ]\n        });\n        alert.present();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/Connection/Connection.ts","import {HttpClient} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class RegisterServices {\n    constructor(private http:HttpClient){\n\n    }\n\n    register(email: string, password: string){\n        const data = {email: email, password: password};\n        return this.http.post('http://localhost:8080' + '/user/register', data);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/register.services.ts","import {HttpClient} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class AuthenficationServices {\n    constructor(private http: HttpClient) {\n\n    }\n    /**\n     * Login with the email and password\n     */\n    login(email: string, password:string) {\n        const data = {email: email, password: password};\n        return this.http.post('http://localhost:8080' + 'login', data);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/authenfication.services.ts","import {HttpClient} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class PasswordServices {\n    constructor(private http: HttpClient){}\n\n    /**\n     * Reset password with the email\n     */\n    forgotPassword(email:string) {\n        return this.http.post('http://localhost:8080' + 'api/reset-password', email);\n    }\n\n    /**\n     * Reset password with the email\n     */\n    changePassword(newPassword: string) {\n        return this.http.post('http://localhost:8080'+ 'api/change-password', newPassword);\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/password.services.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport {ConnectionPage} from \"../pages/Connection/Connection\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AuthenficationServices} from \"../services/authenfication.services\";\nimport {PasswordServices} from \"../services/password.services\";\nimport {RegisterServices} from \"../services/register.services\";\n\n@NgModule({\n  declarations: [\n    MyApp,\n      ConnectionPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpClientModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    ConnectionPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n      AuthenficationServices,\n      PasswordServices,\n      RegisterServices\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { ConnectionPage } from '../pages/Connection/Connection';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = ConnectionPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}